name: Test Python Package
# Stress Test against different platforms and python versions

on:
  push:
    branches:
      - master
      - dev
      - ci
  pull_request:
    branches:
      - master
      - dev
    tags:
      - v*


jobs:
  test_suite:
    runs-on: ${{ "{{" }} matrix.platform {{ "}}" }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: ["{{ cookiecutter.interpreters['supported-interpreters'] | join('", "')}}"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ "{{" }} matrix.python-version {{ "}}" }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ "{{" }} matrix.python-version {{ "}}" }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions

    - name: Do Lint Checking
      run: tox -e lint -vv -s false

    - name: Do Type Checking
      run: tox -e type -vv -s false

    - name: Specify current package version to assist build tool
      run: echo "PKG_VERSION=$(python scripts/parse_version.py)" >> $GITHUB_ENV

    - name: Run Test Suite
      run: tox -vv -s false
      env:
        PLATFORM: ${{ "{{" }} matrix.platform {{ "}}" }}
    - name: Check for compliance with Python Best Practices
      run: |
        DIST_DIR=dist
        echo "DIST_DIR=dist" >> $GITHUB_ENV

        mkdir "$DIST_DIR"
        mv ".tox/${DIST_DIR}/{{ cookiecutter.pkg_name }}-${PKG_VERSION}.tar.gz" "${DIST_DIR}"
        mv ".tox/${DIST_DIR}/{{ cookiecutter.pkg_name }}-${PKG_VERSION}-py3-none-any.whl" "${DIST_DIR}"
        tox -e check -vv -s false

    - name: Upload Source & Wheel distributions as Artefacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-${{ "{{" }} matrix.platform {{ "}}" }}-${{ "{{" }} matrix.python-version {{ "}}" }}
        path: ${{ "{{" }} env.DIST_DIR {{ "}}" }}
        if-no-files-found: error

    - name: Aggregate Test Coverage Data
      run: |
        python -m pip install coverage
        tox -e coverage --sitepackages -vv -s false

    - name: Upload Coverage Data as Artefacts
      uses: actions/upload-artifact@v2
      with:
        name: coverage-xml-data
        path: ./.tox/coverage.xml
        if-no-files-found: error

  host_coverage_results:
    needs: test_suite
    runs-on: ubuntu-latest
    steps:
    - name: Download Coverage Data
      uses: actions/download-artifact@v2
      with:
        name: coverage-xml-data
    - name: Send Coverage Data to Codecov
      uses: codecov/codecov-action@v2
      with:
        directory: .
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: coverage.xml
        flags: unittests
        name: codecov-umbrella
        verbose: true
