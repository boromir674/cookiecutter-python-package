{% if cookiecutter.project_type == "pytest-plugin" %}# BUILD

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
{% else %}
[tool.uv.build-backend]
module-name = "{{ cookiecutter.pkg_name }}"
module-root = "src"

source-include = [
    "tests/**",
    "docs/**/*.md",
    "mkdocs.yml",
    "src/**/*.typed",
    "src/stubs/*.pyi",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md",
    "CHANGELOG.md",
]

# UV-COMPATIBLE PROJECT

[project]
name = "{{ cookiecutter.pkg_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
maintainers = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.author_email }}"},
]
authors = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.author_email }}"},
]
license = "AGPL-3.0-only"
readme = "README.md"
keywords = [{% if cookiecutter.project_type == "pytest-plugin" %}"pytest"{% elif cookiecutter.project_type == "module" %}"library"{% elif cookiecutter.project_type == "module+cli" %}"CLI"{% endif %}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

## ALLOWED PYTHON
requires-python = ">=3.8, <3.13"

## PROD DEPENDENCIES
dependencies = [
    {% if cookiecutter.project_type == "module+cli" %}"click>=8.0.0, <9.0.0",{% endif %}
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-explicit>=1.0.1,<2.0.0",{% if cookiecutter.project_type == "module+cli" %}
    "pytest-run-subprocess==0.10.0",{% endif %}
    "pytest-xdist>=3.5.0,<4.0.0",
]
docs = [{% if cookiecutter.docs_builder == "mkdocs" %}
    "mkdocs>=1.6.1,<2.0.0",
    "mkdocs-click==0.8.1",
    # latest release (9 May 2025) support python >= 3.7
    "mkdocs-gen-files==0.5.0",
    "mkdocs-literate-nav==0.6.1",
    "mkdocs-macros-plugin>=1.3.7,<2.0.0",
    "mkdocs-material>=9.6.9,<10.0.0",
    "mkdocs-mermaid2-plugin>=1.2.1,<2.0.0",
    # mkdocstrings 0.26.1 is the last to support python3.8!
    "mkdocstrings==0.26.1",
    # mkdocstrings-python 1.11.1 is last to support python 3.8
    "mkdocstrings-python==1.11.1",{% elif cookiecutter.docs_builder == "sphinx" %}
    "sphinx >= 4.0.0, <5.0.0",
    "sphinx-autodoc-typehints >= 1.10, <2.0.0",
    "sphinx-rtd-theme == 0.5.0",
    "sphinxcontrib-spelling >= 7.3.3, <8.0.0",
    "sphinx-inline-tabs >= 2023.4.21, <2024.0.0",
    "sphinxcontrib-mermaid == 0.9.2",{% endif %}
]
typing = [
    "mypy==1.2.0",
    # "pytest>=7.4.4",
    "types-pyyaml>=6.0.12.5,<7.0.0.0",
    "types-requests>=2.27.26,<2.28.0",
]

# uv add 'requests [security,tests] >= 2.8.1, == 2.8.* ; python_version < "2.7"'
# uv add 'griffe >=1.0.0 ; python_version >= "3.9"'

{% if cookiecutter.project_type == "module+cli" %}
[project.scripts]
{{ cookiecutter.pkg_name|replace('_', '-') }} = "{{ cookiecutter.pkg_name }}.cli:main"{% endif %}


# PyPi url links, that should appear in 'Project Links' section
[project.urls]
Repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}"
Documentation = "https://{{ cookiecutter.repo_name }}.readthedocs.io/"
Changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}/blob/master/CHANGELOG.md"
Releases = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}/releases"{% endif %}


# TOOLS

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "--strict-markers"
markers = [
    "slow: Marks a slow test",
    "integration: Integration Tests",
    "network_bound: Require internet connection",
    {% if cookiecutter.project_type == "module+cli" %}"click_setup: Runtime configuration of CliRunner",{% endif %}
]
testpaths = [
    "tests",
]
explicit-only = [
    "integration",
    "network_bound",
]

## DEV SEC OPS
[tool.bandit]
exclude_dirs = ["tests/data", "path/to/file"]
tests = []
skips = [
    "B101",
]

## MUTATION TESTS
[tool.mutmut]
tests_dir = "tests/"
runner = "python -m pytest -n auto"

paths_to_mutate = "src/{{ cookiecutter.pkg_name }}"

[tool.black]
line-length = 95
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = 'black'
lines_after_imports = 2
