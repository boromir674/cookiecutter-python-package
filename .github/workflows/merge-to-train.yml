name: Merge Boarding into Train

on:
  pull_request:
    # When a pull request merges, the pull request is automatically closed.
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-pull_request-workflow-when-a-pull-request-merges
    types: [closed]
    branches:  # ALLOWED Base Branches
      # - boarding-auto
      ## IMPORTANT: below branches synergize with Protection Rules
      - test-distro
      - test-distro-*
      - test-docs
      - test-docs-*
      - test-distro-docs
      - test-distro-docs-*
      ## Branch picked when files chnaged are unclassified
      - direct-onboarding
      - direct-onboarding-*

# Listens to Event fired: When PR is Closed, and PR targets 'boarding-auto' branch
# Case GITOPS: Trigger when Auto Merge PR 'User Branch' --> 'boarding-auto'
jobs:
  merge_into_train:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAIN: 'release-train'
      RELEASE_BR: 'release'
      # BOARDING: ${{ github.event.pull_request.base.ref == 'boarding-auto' && 'boarding-auto' || 'boarding' }}
      # BOARDING: ${{ (github.event.pull_request.base.ref == 'boarding-auto' || github.event.ref == 'refs/tags/auto-release') && 'boarding-auto' || 'boarding' }}
      MAIN_BR: 'master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 indicates all history for all branches and tags.
          set-safe-directory: ''  # `git config --global --add safe.directory <path>`
          token: '${{ secrets.GH_TOKEN }}'

      - name: "Ensure Upstream '${{ env.MAIN_BR }}' is tracked (has local counterpart)"
        run: git branch --track "${{ env.MAIN_BR }}" "origin/${{ env.MAIN_BR }}" || echo "[WARNING] Branch '${{ env.MAIN_BR }}' already exists locally"

      - run: |
          INCOMING_BR="${{ github.event.pull_request.base.ref }}"
          echo "INCOMING_BR: $INCOMING_BR"
          echo INCOMING_BR=$INCOMING_BR >> $GITHUB_ENV

      # - name: Track Protected Branch '${{ env.INCOMING_BR }}' with local counterpart
      #   run: git branch --track "${{ env.INCOMING_BR }}" "origin/${{ env.INCOMING_BR }}"

      # create a Train branch on top of master unless its Upstream exists (just track it)
      - run: git branch --track "${{ env.TRAIN }}" "origin/${{ env.TRAIN }}" || (git checkout -b ${{ env.TRAIN }} ${{ env.MAIN_BR }} && git push origin ${{ env.TRAIN }})

      - name: Sanity Check that '${{ env.INCOMING_BR }}' and '${{ env.TRAIN }}' branches exist
        run: |
          if [ -z "$(git branch --list ${INCOMING_BR})" ]; then
            echo "[ERROR] Branch '${INCOMING_BR}' does not exist. Exiting .."
            exit 1
          fi
          if [ -z "$(git branch --list ${TRAIN})" ]; then
            echo "[ERROR] Branch '${TRAIN}' does not exist. Exiting .."
            exit 1
          fi

      ############## PR ##############
      - name: "Create PR  Head: '${{ env.INCOMING_BR }}'  -->  Base: '${{ env.TRAIN }}'"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh pr create --head "${{ env.INCOMING_BR }}" --base "${{ env.TRAIN }}" \
            --title "Merging '${{ env.INCOMING_BR }}', into '${{ env.TRAIN }}'" \
            --body "## :train: Boarding onto the Release Train :train:

          This PR is automatically generated by a GitHub Action workflow. It's part of the process of boarding changes onto the **Release Train** branch, setting the stage for the next steps in our GitOps journey.

          ### What's Happening Here?

          - We're merging changes from `${{ steps.user_branch.outputs.USER_BRANCH }}` into the `${{ env.TRAIN }}` branch.
          - This is a critical step in our process, moving us closer to launching the Release Train.

          ### Next Steps: Launching and Opening the Doors

          - Once this PR is merged, we're set to **launch the Release Train**.
          - After the launch, our next goal is to **open the doors** of the Release Train, making these changes available in our release.

          ### :white_check_mark: Automatic Merging :white_check_mark:

          - This PR is designed to **automatically merge** once all CI checks pass.
          - The CI checks include our GitHub Actions workflows and RTD integration.

          ### :warning: A Note to Maintainers :warning:

          - Please **do not close this PR manually**.
          - If there are any issues or required manual interventions, reach out to the development team.
          "

      ############## Merge ##############
      - name: 'Merge PR   ${{ env.INCOMING_BR }}  -->  ${{ env.TRAIN }}'
        run: gh pr merge "${{ env.INCOMING_BR }}" --auto --merge --delete-branch
        # --delete-branch --squash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        # HEAD is now at ${{ env.TRAIN }}
