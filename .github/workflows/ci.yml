# CI Pipeline

name: CI Pipeline
# primarily serves as quick feedback on every push
# on feature-branches, should be as quick as possible
#  runs only tests, type check, docs build dynamically based on changes

on:
  push:
    branches:
      - '*'
      # except main, dev, release, branches
      - '!main'
      - '!dev'
      - '!release'

jobs:
  # For Test Suite this pipeline aims for speed
  # so for feature branches test in edit mode
  # for 'high' branches (ie dev) run sdist/wheel tests

## Temporary TEST against reproducible build
  test_sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # Install uv to manage pinned versions
    - name: Install uv
      run: pip install -U uv

    # Build Source Distribution
    - name: 'Build Source Distribution'
      run: uv build --sdist

    # Export "pinned" (exact) dependencies' versions in requirements.txt format
    - name: 'Export pinned Prod + Test dependencies'
      run: uv export --no-emit-project --no-dev --extra test --frozen --format requirements-txt -o requirements.txt

    # Install dependencies in virtualenv
    - name: 'Install "Prod + Test" dependencies'
      run: |
        python -m pip install virtualenv &&
        python -m virtualenv env
        source env/bin/activate
        python -m pip install -r requirements.txt
        deactivate

    # Install Package withouth dependencies
    - name: 'Install Package without dependencies'
      run: |
        source env/bin/activate
        # python -m pip install --no-deps dist/*.tar.gz
        python -m pip install --no-deps -e .
        deactivate

    # Run tests
    - name: 'Run tests'
      run: |
        source env/bin/activate
        pytest -ra -n auto
        deactivate

  test_integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # Install uv to manage pinned versions
    - name: Install uv
      run: pip install -U uv

    # Build Source Distribution
    - name: 'Build Source Distribution'
      run: uv build --sdist

    # Export "pinned" (exact) dependencies' versions in requirements.txt format
    - name: 'Export pinned Prod + Test dependencies'
      run: uv export --no-emit-project --no-dev --extra test --frozen --format requirements-txt -o requirements.txt

    # Install dependencies in virtualenv
    - name: 'Install "Prod + Test" dependencies'
      run: |
        python -m pip install virtualenv &&
        python -m virtualenv env
        source env/bin/activate
        python -m pip install -r requirements.txt
        deactivate

    # Install Package withouth dependencies
    - name: 'Install Package without dependencies'
      run: |
        source env/bin/activate
        # python -m pip install --no-deps dist/*.tar.gz
        python -m pip install --no-deps -e .
        deactivate

    # Run Integration tests
    - name: 'Run Integration tests'
      if: always()
      run: |
        source env/bin/activate
        pip install 'tox<4.0'  # integration tests dependency
        pytest -ra -n auto --run-slow --run-network_bound -vvs -k 'test_cli or build_backend_sdist or test_build_creates_artifacts or test_lint_passes'
        deactivate


## TYPE CHECK


## DOCS


## TEST SUITE in EDIT MODE
