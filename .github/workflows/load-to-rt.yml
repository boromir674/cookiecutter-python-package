###########################
## Onboard Release Train ##
###########################

### TRIGGER event ###
# export tt='onboard-rt'; git tag -d "$tt"; git push --delete origin "$tt"; git tag "$tt" && git push origin "$tt"

########   OR   ########
# export tt='quick-release'
# git tag -d "$tt"
# git push --delete origin "$tt"
# git tag "$tt"
# git push origin "$tt"
########################

# PR: HEAD --> release-train


# Trigger only on push of an 'board-rt' tag
on:
  push:
    tags:
      # on tag with name 'board-rt' only
      - board-rt

jobs:
  release_readme:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAIN: 'release-train'
      MAIN_BRANCH: 'master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 indicates all history for all branches and tags.
          set-safe-directory: ''  # `git config --global --add safe.directory <path>`

      - run: git log --graph --decorate --color --all --stat

      # Find branch that points to the same ref as the pushed tag
      - run: echo output="$(git branch --contains ${{ github.ref }})" >> $GITHUB_ENV
      - run: echo BOARDING_BR=$(echo "$output" | sed -n '/^\s\s\S/p' | awk '{print $1}') >> $GITHUB_OUTPUT
        id: get_branch_name

      ### CREATE BRANCH Release Train ###
      - run: git checkout "${{ env.MAIN_BRANCH }}"
      - run: git checkout -b "${{ env.TRAIN }}"
      - run: git push -u origin HEAD

      ############## PR ##############
      - name: 'Create PR   ${{ steps.get_branch_name.outputs.BOARDING_BR }}  -->  ${{ env.TRAIN }}'
        # --head is the branch where the changes were developed
        # --base is the branch you want to merge the changes into
        run: |
          gh pr create --head "${{ steps.get_branch_name.outputs.BOARDING_BR }}" --base "${{ env.TRAIN }}"  \
            --title "Onboarding Release Train - Merging into ${{ env.TRAIN }} Branch" \
            --body "This PR is automatically generated by a GitHub Action workflow. \
            It contains changes that the Developer wants to be included in the next Release. \
            \n\n\
            Automatic merge happens, if the CI Checks (ie gh actions workflow, rtd integration), are Successful! \
            \n\n\
            Please do not close this PR manually."

      ############## Merge ##############
      - name: 'Merge PR   ${{ steps.get_branch_name.outputs.BOARDING_BR }}  -->  ${{ env.TRAIN }}'
        run: gh pr merge "${{ steps.get_branch_name.outputs.BOARDING_BR }}" --auto --delete-branch --squash
        # HEAD is now at ${{ env.TRAIN }}


      ## DONE ##