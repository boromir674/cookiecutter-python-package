################################
## Docs Readme Publish ##
##     Reusable Workflow      ##
################################

# PR: empemeral-doc-updates --> docs-auto


# Trigger only on push of a 'quick-release' tag, on any branch
on:
  # on tag with name 'quick-release' only
  push:
    tags:
      - quick-release


jobs:
  release_readme:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Add repository path as safe.directory for Git global config by running `git
          # config --global --add safe.directory <path>`
          # Default: true
          set-safe-directory: ''

      # pushed tag that we checkout is not a branch, so we need to create a branch

      - run: git checkout -b empemeral-doc-updates
      - run: git push -u origin HEAD

      - name: Create Pull Request
        # --head is the branch where the changes were developed
        # --base is the branch you want to merge the changes into
        run: |
          gh pr create --head empemeral-doc-updates --base docs-auto  \
            --title "Documentation Updates - Merge to Dedicated Branch" \
            --body "This PR is automatically generated by a GitHub Action workflow. \
            It contains documentation updates that were pushed to the 'quick-release' tag. \
            The workflow will merge this PR into the 'docs-auto' branch, which will \
            trigger a new build of the documentation site. \
            \n\n\
            Please do not close this PR manually."

      - name: Merge Pull Request into docs-auto and delete empemeral-doc-updates Branch

      # gh pr merge          :  If required checks have not yet passed, AutoMerge will be enabled.

      #   --auto             :  Automatically merge only after necessary requirements are met
      #   -s, --squash       :  Squash the commits into one commit and merge it into the base branch
      #   -d, --delete-branch:  Delete the local and remote branch after merge

        run: |
          gh pr merge empemeral-doc-updates --auto --delete-branch --squash


# Merge a pull request on GitHub.

# Without an argument, the pull request that belongs to the current branch
# is selected.
 	

# USAGE
#   gh pr merge [<number> | <url> | <branch>] [flags]

# FLAGS
#   -A, --author-email text       Email text for merge commit author
#       --auto                    Automatically merge only after necessary requirements are met
#   -b, --body text               Body text for the merge commit
#   -F, --body-file file          Read body text from file (use "-" to read from standard input)
#   -d, --delete-branch           Delete the local and remote branch after merge
#       --disable-auto            Disable auto-merge for this pull request
#       --match-head-commit SHA   Commit SHA that the pull request head must match to allow merge
#   -m, --merge                   Merge the commits with the base branch
#   -r, --rebase                  Rebase the commits onto the base branch
#   -s, --squash                  Squash the commits into one commit and merge it into the base branch
#   -t, --subject text            Subject text for the merge commit

# INHERITED FLAGS
#   -R, --repo [HOST/]OWNER/REPO   Select another repository using the [HOST/]OWNER/REPO format

# LEARN MORE
#   Read the manual at https://cli.github.com/manual