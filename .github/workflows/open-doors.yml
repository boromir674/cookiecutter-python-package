################
## Open Doors ##
################

### TRIGGER event ###
# export tt='open-doors'; git tag -d "$tt"; git push --delete origin "$tt"; git tag "$tt" && git push origin "$tt"


# PR: release --> main/master

on:
  push:
    tags:
      # on tag with name 'open-doors' only
      - open-doors

jobs:
  release_readme:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BR: 'release'
      MAIN_BRANCH: 'master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 indicates all history for all branches and tags.
          set-safe-directory: ''  # `git config --global --add safe.directory <path>`

      - run: git log --graph --decorate --color --all --stat

      # Verify the Tag points to a commit on the 'release' branch
      
      # v1.2.10 of 8 Dec 2023 == a9ff27d505ba2bf074a2ebb48b208e76d35ff308 points to 
      - uses: rickstaa/action-contains-tag@a9ff27d505ba2bf074a2ebb48b208e76d35ff308
        id: release_contains_tag
        with:
          reference: ${{ env.RELEASE_BR }}
          tag: "${{ github.ref }}"
     
      # Fail if the branch is not $RELEASE_BR
      - if: ${{ steps.release_contains_tag.outputs.retval }} != 'true'
        run: |
          echo "[ERROR] Pushed tag '${{ github.ref }}' NOT on '${{ env.RELEASE_BR }}' branch!"
          echo "This action should only be run on the ${{ env.RELEASE_BR }} branch!"
          echo [FIX] "Please push the tag on the ${{ env.RELEASE_BR }} branch!"
          exit 1

      ############## PR ##############
      - name: 'Create PR   ${{ env.RELEASE_BR }}  -->  ${{ env.MAIN_BRANCH }}'
        # --head is the branch where the changes were developed
        # --base is the branch you want to merge the changes into
        run: |
          gh pr create --head "${{ env.RELEASE_BR }}" --base "${{ env.MAIN_BRANCH }}"  \
            --title "Release to Prod - Merging into ${{ env.MAIN_BRANCH }} Branch" \
            --body "This PR is automatically generated by a GitHub Action workflow. \
            It contains changes that should be 'released into production'. \
            \n\n\
            "

      # ############## Merge ##############
      # - name: 'Merge PR   ${{ steps.get_branch_name.outputs.RELEASE_BR }}  -->  ${{ env.MAIN_BRANCH }}'
      #   run: gh pr merge "${{ steps.get_branch_name.outputs.RELEASE_BR }}" --auto --delete-branch --squash
      #   # HEAD is now at ${{ env.MAIN_BRANCH }}


      ## DONE ##