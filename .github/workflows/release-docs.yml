################################
## Docs PR to Release Branch  ##
################################

# 1. Checkout git
# 2. move release branch onto master
# 3. checkout auto-docs branch
# 4. Open PR with auto-merge to release branch
# 5. checkout release branch
# 6  Do Sem Ver bump in source code files
# 7 Commit
# 8. Add entry in Changelog
# 9. Commit
# 10. Push and Open PR to master (no auto-merge)

# PR: docs-auto --> release (auto-merge)
# PR: release --> master (no auto-merge)


on:
  pull_request:
    types:
      - closed
    branches:
    - docs-auto

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Add repository path as safe.directory for Git global config by running `git
          # config --global --add safe.directory <path>`
          # Default: true
          set-safe-directory: ''
      # - run: git branch --track master origin/master
      # - run: git checkout master
      # - run: git push -u origin HEAD

      - run: git branch --track auto-docs origin/auto-docs
      - run: git checkout auto-docs

      ### PR: Head 'auto-docs' --> Base 'release' ###
      - name: Create Pull Request
        # --head is the branch where the changes were developed
        # --base is the branch you want to merge the changes into
        run: |
          gh pr create --head auto-docs --base release  \
            --title "Documentation Release Candidate - Merging to 'release' branch" \
            --body "This PR is automatically generated by a GitHub Action workflow. \
            It contains documentation updates that were pushed to the 'docs-auto' branch. \
            The workflow will merge this PR into the 'release' branch, which will \
            trigger a new release of the project. \
            \n\n\
            Please do not close this PR manually."

      # MERGE  'auto-docs' --> Base 'release' #
      - name: 'Merge Pull Request into release branch'
        run: |
          gh pr merge auto-docs --auto --squash

      - run: git fetch origin release
      - run: git checkout release
      
      ### PR: Head 'release' --> Base 'master' ###
      - name: Create Pull Request
        run: |
          gh pr create --head release --base master  \
            --title "Documentation Release - Preparing to Merge into 'master' branch" \
            --body "This PR is automatically generated by a GitHub Action workflow. \
            It contains Documentation Updates that were pushed to the 'release' branch. \
            \n\n\
            To verify Docs CI Build passed, see the PR's 'Checks Section', in this web UI \
            \n\n\
            Next, steps if needed should be: \
            \n\n\
            1. Verify only docs/ folder or mkdocs.yml file where changed, excluding commits that might happen after this PR had opened \
            \n\n\
            2. Update, commit, and push below files to br release, to Bump Sem Ver for new Release \n \
              - README.rst\n \
              - src/cookiecutter_python/__init__.py\n \
              - pyproject.toml\n \
              - docs/conf.py\n \
            \n\n\
            3. Update, commit, and push CHNAGELO.rst, with new release info \n \
            "



  if_not_merged:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was not merged, but closed, thus Cancellation was requested
          echo "The PR was closed by ${{ github.actor }}"

